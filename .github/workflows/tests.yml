name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env: 
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust-version: [stable, beta]
        include:
          - os: ubuntu-latest
            rust-version: stable
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rust-version: stable
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            rust-version: stable
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            rust-version: stable
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            rust-version: stable
            target: x86_64-apple-darwin
          - os: macos-latest
            rust-version: stable
            target: aarch64-apple-darwin
    steps:
    - uses: actions/checkout@v2
      name: Checkout code

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        target: ${{ matrix.target }}
        profile: minimal
        override: true

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --target ${{ matrix.target }}

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target ${{ matrix.target }}

